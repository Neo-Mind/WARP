/**************************************************************************\
*                                                                          *
*   Copyright (C) 2020-2022 Functor                                        *
*   Copyright (C) 2020-2022 CH.C (jchcc)                                   *
*   Copyright (C) 2020-2022 Andrei Karas (4144)                            *
*   Copyright (C) 2020-2024 X-EcutiOnner (xex.ecutionner@gmail.com)        *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Functor, CH.C (jchcc), Andrei (4144), X-EcutiOnner     *
*   Created Date  : 2020-11-11                                             *
*   Last Modified : 2024-02-17                                             *
*                                                                          *
\**************************************************************************/

///======================================================================///
///
/// \brief Change the coords used for equipment swap button both on the
///        equipment window and costume window inside SWAPEQUIPMENTWNDINFO function.
///
///======================================================================///
NoEquipSwap = function()
{
    const _ = 'NoEquipSwap : ';

    let addr, code, prefix, suffix;

    $$(_ + '1.1 - Find the location where equipment function is called')
    prefix =
        CALL(NEG3WC)             //call func#1
    +   MOV(EAX, [EDI, 0x18])    //mov eax, dword ptr [edi + 18h]
    +   MOV(ECX, [EDI, POS2WC])  //mov ecx, dword ptr [edi + dispA]
    ;

    suffix =
        SUB(EAX, 0x14)           //sub eax, 14h
    +   (Exe.Version <= 11
    ?   MOV(EDX, [ECX])          //mov edx, dword ptr [ecx]
    :   ''
    )
    +   PUSH_EAX                 //push eax
    ;

    addr = Exe.FindHex(prefix + suffix);

    if (addr > 0)
    {
        $$(_ + '1.2 - Change the SUB to ADD')
        Exe.SetHex(addr + prefix.byteCount(), ADD(EAX, 0x14));
    }
    else if (Exe.BuildDate > 20210100)
    {
        prefix =
            MOV(ECX, [EDI, POS2WC])  //mov ecx, dword ptr [edi + dispA]
        ;

        suffix =
            PUSH(0xA7)               //push A7h
        +   PUSH(0xC1)               //push C1h
        +   MOV(EAX, [ECX])          //mov eax, dword ptr [ecx]
        ;

        addr = Exe.FindHex(prefix + suffix);

        if (addr < 0)
        {
            prefix = MOV(ECX, [ESI, POS2WC]);  //mov ecx, dword ptr [esi + dispA]
            addr = Exe.FindHex(prefix + suffix);
        }

        if (addr > 0)
        {
            $$(_ + '1.2 - Change the A7 to CF')
            Exe.SetUint32(addr + prefix.byteCount() + 1, 0xCF);
        }
    }

    if (addr < 0)
        throw Error("Equip Function CALL missing");

    // TODO: This half needs live running to determine the coords

    $$(_ + '2.1 - Find the location where costume function is called')
    if (Exe.BuildDate < 20211101 && Exe.BuildDate > 20230427)
    {
        code =
            MOV(ECX, [ESI, POS2WC])  //mov ecx, dword ptr [esi + dispB]
        +   TEST(ECX, ECX)           //test ecx, ecx
        +   JZ(0x6F)                 //jz short _skip
        +   MOV(EAX, [ESI, POS1WC])  //mov eax, dword ptr [esi + dispC] ; dispC < dispB
        +   MOV(EDX, [ECX])          //mov edx, dword ptr [ecx]
        +   ADD(EAX, 0x93)           //add eax, 93h
        +   PUSH_EAX                 //push eax
        ;

        addr = Exe.FindHex(code);

        if (addr < 0)
            throw Error("Costume function CALL missing");

        $$(_ + '2.2 - Change 93h to FFh')
        Exe.SetUint8(addr + code.byteCount() - 5, 0xFF);
    }

    return true;
};

///++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++///
/// \brief Disable for unsupported clients.
///++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++///
NoEquipSwap.validate = () =>
    Exe.BuildDate >= 20170208;

///
/// \brief Change the JNZ after comparison to remove title window button
///        on the equipment window inside EQUIPMENTWNDINFO function.
///
NoEquipWinTitle = function()
{
	const _ = 'NoEquipWinTitle : ';

	$$(_ + '1 - Find the location where equipment function is called')
	const delta = Exe.BuildDate > 20170000 ? POS2WC : WCp;
	const prefix =
		CALL(NEG3WC)              //call UITabControl_AddTab
	+	CMP([EDI, delta], 0)      //cmp dword ptr [edi + UIEquipWnd.m_typeWnd], 0
	;
	const suffix =
		JNZ(0x19)                 //jnz short _valid
	+	PUSH(0xA7D)               //push 0A7Dh
	+	CALL(ALLWC)               //call MsgStr
	+	MOV(ECX, [EDI, POS2WC])   //mov ecx, dword ptr [edi + UIEquipWnd.m_UITabControl]
	+	ADD(ESP, 4)               //add esp, 4
	+	PUSH_EAX                  //push eax
	+	CALL()                    //call UITabControl_AddTab
	;

	/* - Used for debugging
	const addTabOffsets = [1, 35];
	const typeWndOffset = [7, 4];
	const msgStrOffset = 20;
	const tabControlOffset = [26, 4];
	*/

	const addr = Exe.FindHex(prefix + suffix);
	if (addr < 0)
		throw Error("Pattern not found");

	/*
	for (let i = 0; i < addTabOffsets.length; i++)
	{
		logRawFunc("UITabControl_AddTab", addr, addTabOffsets[i]);
	}
	logField("UIEquipWnd::m_typeWnd", addr, typeWndOffset);
	logRawFunc("MsgStr", addr, msgStrOffset);
	logField("UIEquipWnd::m_UITabControl", addr, tabControlOffset);
	*/

	$$(_ + '2 - Change JNZ to JMP')
	Exe.SetJMP(addr + prefix.byteCount());

	return true;
};

///
/// \brief Disable for Older Clients - Check for Reference
///
NoEquipWinTitle.validate = () =>
	(ROC.IsRenewal && Exe.BuildDate >= 20141126) || Exe.BuildDate >= 20150225;
